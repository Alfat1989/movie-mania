{"mappings":"AAmBA,SAASA,eAAeC,GAEpB,MAAMC,EAAQ,GACRC,EAASF,EAAIG,cACfC,QAAU,EACd,IAAI,IAAIC,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAE5BJ,EAAMC,EAAOG,IAGTJ,EAAMC,EAAOG,IAAM,IACvBJ,EAAMC,EAAOG,KAAK,EAClBD,WAJAH,EAAMC,EAAOG,IAAM,EAOzB,OAAOD,QAlCXG,QAAQC,IAAI,SAuEZD,QAAQC,IAAIT,eAAe,KAC3BQ,QAAQC,IAAIT,eAAe,UAC3BQ,QAAQC,IAAIT,eAAe,YAC3BQ,QAAQC,IAAIT,eAAe,YAC3BQ,QAAQC,IAAIT,eAAe,mBAC3BQ,QAAQC,IAAIT,eAAe","sources":["src/index.js"],"sourcesContent":["console.log('Movie')\n\n\n// function dublicateCount(text) {\n//     const unique = []\n//     const textUnigue = [...text]\n//         .filter((course, index, array) => {\n//             array.indexOf(course) === index\n//         });\n//     console.log(textUnigue)\n//     // for (let i = 0; i < text.length; i += 1){\n        \n//     // }\n\n// }\n// console.log(dublicateCount('aaabbbctil'))\n\n////////////////////////////////////////////////////////\n\nfunction duplicateCount(str) {\n    \n    const myObj = {};\n    const newStr = str.toLowerCase();\n        counter = 0;    \n    for(var i = 0; i < newStr.length; i++){   \n\n      if(!myObj[newStr[i]]){\n          myObj[newStr[i]] = 1;\n      } \n      else if(myObj[newStr[i]] < 2) {\n          myObj[newStr[i]]+=1;\n          counter++;\n      }    \n    }\n    return counter;\n}\n//   const x = text.toLowerCase().split('');\n//   let iterable = new Set(x);\n\n//   const w = Array.from(iterable);\n  \n//   // console.log(w);\n\n//   console.log(x.includes(...w));\n  // const y = new Set();\n\n  // let intersection = new Set([...x].filter(e => set2.has(e)));\n\n  \n  // let count = 0;\n  \n  // for(let i = 0; i < x.length; i += 1){\n  //   if(x[i] === x[i+1]){\n  //     // count += 1;\n  //     y.add(x[i]);\n  //   } \n  // }\n  // console.log(y);\n\n\n  // return y.size;\n\n\n  // console.log(x);\n\n  // for (let value of iterable) {\n  //   console.log(value);\n  // }\n\n\n\nconsole.log(duplicateCount(\"\")) //, 0);\nconsole.log(duplicateCount(\"abcde\")) //, 0);\nconsole.log(duplicateCount(\"aabbcde\")) //, 2);\nconsole.log(duplicateCount(\"aabBcde\")) //, 2,\"should ignore case\");\nconsole.log(duplicateCount(\"Indivisibility\")) //, 1)\nconsole.log(duplicateCount(\"Indivisibilities\")) //, 2, \"characters may not be adjacent\")\n\n\n\n// function countDuplicates(str) {\n//     var myObj = {},\n//         counter = 0;    \n//     for(var i = 0; i < str.length; i++){   \n\n//       if(!myObj[str[i]]){\n//           myObj[str[i]] = 1;\n//       } \n//       else if(myObj[str[i]] < 2) {\n//           myObj[str[i]]+=1;\n//           counter++;\n//       }    \n//     }\n//     return counter;\n// }\n"],"names":["duplicateCount","str","myObj","newStr","toLowerCase","counter","i","length","console","log"],"version":3,"file":"index.fc478f2e.js.map"}